
*** Running vivado
    with args -log bft.vds -m64 -product Vivado -mode batch -messageDb vivado.pb -notrace -source bft.tcl



****** Vivado v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:49 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source bft.tcl -notrace
Command: synth_design -top bft -part xc7k70tfbg484-2
Starting synth_design
Attempting to get a license for feature 'Synthesis' and/or device 'xc7k70t'
INFO: [Common 17-349] Got license for feature 'Synthesis' and/or device 'xc7k70t'
INFO: [Device 21-403] Loading part xc7k70tfbg484-2
INFO: [Synth 8-7079] Multithreading enabled for synth_design using a maximum of 2 processes.
INFO: [Synth 8-7078] Launching helper process for spawning children vivado processes
INFO: [Synth 8-7075] Helper process launched with PID 22540
---------------------------------------------------------------------------------
Starting RTL Elaboration : Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 1024.828 ; gain = 0.000
---------------------------------------------------------------------------------
INFO: [Synth 8-638] synthesizing module 'bft' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:52]
WARNING: [Synth 8-614] signal 'wbInputData' is read in the process but is not in the sensitivity list [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:94]
WARNING: [Synth 8-614] signal 'wbInputDataStage0' is read in the process but is not in the sensitivity list [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:94]
INFO: [Synth 8-226] default block is never used [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:122]
INFO: [Synth 8-638] synthesizing module 'round_1' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bftLib/round_1.vhdl:50]
INFO: [Synth 8-638] synthesizing module 'coreTransform' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bftLib/core_transform.vhdl:60]
	Parameter DATA_WIDTH bound to: 16 - type: integer 
INFO: [Synth 8-256] done synthesizing module 'coreTransform' (1#1) [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bftLib/core_transform.vhdl:60]
INFO: [Synth 8-256] done synthesizing module 'round_1' (2#1) [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bftLib/round_1.vhdl:50]
INFO: [Synth 8-638] synthesizing module 'round_2' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bftLib/round_2.vhdl:50]
INFO: [Synth 8-256] done synthesizing module 'round_2' (3#1) [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bftLib/round_2.vhdl:50]
INFO: [Synth 8-638] synthesizing module 'round_3' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bftLib/round_3.vhdl:50]
INFO: [Synth 8-256] done synthesizing module 'round_3' (4#1) [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bftLib/round_3.vhdl:50]
INFO: [Synth 8-638] synthesizing module 'round_4' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bftLib/round_4.vhdl:53]
	Parameter DATA_WIDTH bound to: 16 - type: integer 
INFO: [Synth 8-256] done synthesizing module 'round_4' (5#1) [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bftLib/round_4.vhdl:53]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'ingressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:249]
INFO: [Synth 8-6157] synthesizing module 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31]
INFO: [Synth 8-6157] synthesizing module 'async_fifo' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/async_fifo.v:38]
	Parameter DEVICE bound to: 7SERIES - type: string 
	Parameter FIFO_WIDTH bound to: 32 - type: integer 
	Parameter FIFO_DEPTH bound to: 10 - type: integer 
	Parameter FIRST_WORD_FALL_THROUGH bound to: FALSE - type: string 
	Parameter ALMOST_EMPTY_OFFSET bound to: 9'b000100000 
	Parameter ALMOST_FULL_OFFSET bound to: 9'b001111001 
	Parameter USE_PROG_FULL_EMPTY bound to: FALSE - type: string 
	Parameter FLAG_GENERATION bound to: FAST - type: string 
	Parameter FIFO_RAM_TYPE bound to: BLOCKRAM - type: string 
INFO: [Synth 8-6155] done synthesizing module 'async_fifo' (6#1) [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/async_fifo.v:38]
INFO: [Synth 8-6155] done synthesizing module 'FifoBuffer' (7#1) [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'ingressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:249]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'ingressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:249]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'ingressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:249]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'ingressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:249]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'ingressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:249]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'ingressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:249]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'ingressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:249]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'egressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:255]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'egressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:255]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'egressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:255]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'egressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:255]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'egressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:255]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'egressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:255]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'egressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:255]
INFO: [Synth 8-3491] module 'FifoBuffer' declared at 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/FifoBuffer.v:31' bound to instance 'egressFifo' of component 'FifoBuffer' [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:255]
INFO: [Synth 8-226] default block is never used [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:288]
INFO: [Synth 8-256] done synthesizing module 'bft' (8#1) [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/sources_1/imports/Sources/bft.vhdl:52]
---------------------------------------------------------------------------------
Finished RTL Elaboration : Time (s): cpu = 00:00:05 ; elapsed = 00:00:05 . Memory (MB): peak = 1024.828 ; gain = 0.000
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Handling Custom Attributes
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Handling Custom Attributes : Time (s): cpu = 00:00:05 ; elapsed = 00:00:06 . Memory (MB): peak = 1024.828 ; gain = 0.000
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished RTL Optimization Phase 1 : Time (s): cpu = 00:00:05 ; elapsed = 00:00:06 . Memory (MB): peak = 1024.828 ; gain = 0.000
---------------------------------------------------------------------------------
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.143 . Memory (MB): peak = 1024.828 ; gain = 0.000
INFO: [Project 1-570] Preparing netlist for logic optimization

Processing XDC Constraints
Initializing timing engine
Parsing XDC File [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/constrs_1/imports/xc7k70tfbg484-2/bft_full.xdc]
Finished Parsing XDC File [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/constrs_1/imports/xc7k70tfbg484-2/bft_full.xdc]
INFO: [Project 1-236] Implementation specific constraints were found while reading constraint file [E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.srcs/constrs_1/imports/xc7k70tfbg484-2/bft_full.xdc]. These constraints will be ignored for synthesis but will be used in implementation. Impacted constraints are listed in the file [.Xil/bft_propImpl.xdc].
Resolution: To avoid this warning, move constraints listed in [.Xil/bft_propImpl.xdc] to another XDC file and exclude this new file from synthesis with the used_in_synthesis property (File Properties dialog in GUI) and re-run elaboration/synthesis.
Completed Processing XDC Constraints

Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.002 . Memory (MB): peak = 1055.672 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
No Unisim elements were transformed.

Constraint Validation Runtime : Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.033 . Memory (MB): peak = 1055.672 ; gain = 0.000
---------------------------------------------------------------------------------
Finished Constraint Validation : Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1055.672 ; gain = 30.844
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Loading Part and Timing Information
---------------------------------------------------------------------------------
Loading part: xc7k70tfbg484-2
---------------------------------------------------------------------------------
Finished Loading Part and Timing Information : Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1055.672 ; gain = 30.844
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Applying 'set_property' XDC Constraints
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished applying 'set_property' XDC Constraints : Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1055.672 ; gain = 30.844
---------------------------------------------------------------------------------
INFO: [Synth 8-802] inferred FSM for state register 'loadState_reg' in module 'bft'
---------------------------------------------------------------------------------------------------
                   State |                     New Encoding |                Previous Encoding 
---------------------------------------------------------------------------------------------------
                      s0 |                              000 |                              000
                      s1 |                              001 |                              001
                      s2 |                              010 |                              010
                      s3 |                              011 |                              011
                      s4 |                              100 |                              100
                      s5 |                              101 |                              101
                      s6 |                              110 |                              110
                      s7 |                              111 |                              111
---------------------------------------------------------------------------------------------------
INFO: [Synth 8-3354] encoded FSM with state register 'loadState_reg' using encoding 'sequential' in module 'bft'
---------------------------------------------------------------------------------
Finished RTL Optimization Phase 2 : Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1055.672 ; gain = 30.844
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start RTL Component Statistics 
---------------------------------------------------------------------------------
Detailed RTL Component Info : 
+---Adders : 
	   2 Input   11 Bit       Adders := 32    
+---XORs : 
	   2 Input     16 Bit         XORs := 64    
	   2 Input     10 Bit         XORs := 32    
+---Registers : 
	               32 Bit    Registers := 17    
	               16 Bit    Registers := 64    
	               14 Bit    Registers := 1     
	               11 Bit    Registers := 32    
	               10 Bit    Registers := 80    
	                8 Bit    Registers := 1     
	                1 Bit    Registers := 85    
+---RAMs : 
	              32K Bit	(1024 X 32 bit)          RAMs := 16    
+---Muxes : 
	   4 Input    8 Bit        Muxes := 1     
	   8 Input    8 Bit        Muxes := 1     
	   8 Input    3 Bit        Muxes := 1     
	   2 Input    3 Bit        Muxes := 8     
	   2 Input    1 Bit        Muxes := 7     
	   9 Input    1 Bit        Muxes := 1     
---------------------------------------------------------------------------------
Finished RTL Component Statistics 
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Part Resource Summary
---------------------------------------------------------------------------------
Part Resources:
DSPs: 240 (col length:80)
BRAMs: 270 (col length: RAMB18 80 RAMB36 40)
---------------------------------------------------------------------------------
Finished Part Resource Summary
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Cross Boundary and Area Optimization
---------------------------------------------------------------------------------
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
DSP Report: Generating DSP xOutReg_reg, operation Mode is: (C'+A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: register xOutReg_reg is absorbed into DSP xOutReg_reg.
DSP Report: operator plusOp is absorbed into DSP xOutReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutReg_reg.
DSP Report: Generating DSP xOutStepReg_reg, operation Mode is: (C'-A2*B2)'.
DSP Report: register xStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register uReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: register xOutStepReg_reg is absorbed into DSP xOutStepReg_reg.
DSP Report: operator minusOp is absorbed into DSP xOutStepReg_reg.
DSP Report: operator multOp is absorbed into DSP xOutStepReg_reg.
---------------------------------------------------------------------------------
Finished Cross Boundary and Area Optimization : Time (s): cpu = 00:00:21 ; elapsed = 00:00:23 . Memory (MB): peak = 1055.672 ; gain = 30.844
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start ROM, RAM, DSP and Shift Register Reporting
---------------------------------------------------------------------------------

Block RAM: Preliminary Mapping	Report (see note below)
+------------+--------------------------------------------------------------------------------------+------------------------+---+---+------------------------+---+---+------------------+--------+--------+
|Module Name | RTL Object                                                                           | PORT A (Depth x Width) | W | R | PORT B (Depth x Width) | W | R | Ports driving FF | RAMB18 | RAMB36 | 
+------------+--------------------------------------------------------------------------------------+------------------------+---+---+------------------------+---+---+------------------+--------+--------+
|bft         | ingressLoop[0].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[1].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[2].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[3].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[4].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[5].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[6].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[7].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[0].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[1].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[2].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[3].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[4].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[5].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[6].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[7].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
+------------+--------------------------------------------------------------------------------------+------------------------+---+---+------------------------+---+---+------------------+--------+--------+

Note: The table above is a preliminary report that shows the Block RAMs at the current stage of the synthesis flow. Some Block RAMs may be reimplemented as non Block RAM primitives later in the synthesis flow. Multiple instantiated Block RAMs are reported only once. 

DSP: Preliminary Mapping	Report (see note below)
+--------------+-------------+--------+--------+--------+--------+--------+------+------+------+------+-------+------+------+
|Module Name   | DSP Mapping | A Size | B Size | C Size | D Size | P Size | AREG | BREG | CREG | DREG | ADREG | MREG | PREG | 
+--------------+-------------+--------+--------+--------+--------+--------+------+------+------+------+-------+------+------+
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'+A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
|coreTransform | (C'-A2*B2)' | 16     | 16     | 16     | -      | 32     | 1    | 1    | 1    | -    | -     | 0    | 1    | 
+--------------+-------------+--------+--------+--------+--------+--------+------+------+------+------+-------+------+------+

Note: The table above is a preliminary report that shows the DSPs inferred at the current stage of the synthesis flow. Some DSP may be reimplemented as non DSP primitives later in the synthesis flow. Multiple instantiated DSPs are reported only once.
---------------------------------------------------------------------------------
Finished ROM, RAM, DSP and Shift Register Reporting
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Applying XDC Timing Constraints
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Applying XDC Timing Constraints : Time (s): cpu = 00:00:32 ; elapsed = 00:00:33 . Memory (MB): peak = 1070.730 ; gain = 45.902
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Timing Optimization
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Timing Optimization : Time (s): cpu = 00:00:32 ; elapsed = 00:00:34 . Memory (MB): peak = 1086.336 ; gain = 61.508
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start ROM, RAM, DSP and Shift Register Reporting
---------------------------------------------------------------------------------

Block RAM: Final Mapping	Report
+------------+--------------------------------------------------------------------------------------+------------------------+---+---+------------------------+---+---+------------------+--------+--------+
|Module Name | RTL Object                                                                           | PORT A (Depth x Width) | W | R | PORT B (Depth x Width) | W | R | Ports driving FF | RAMB18 | RAMB36 | 
+------------+--------------------------------------------------------------------------------------+------------------------+---+---+------------------------+---+---+------------------+--------+--------+
|bft         | ingressLoop[0].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[1].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[2].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[3].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[4].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[5].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[6].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | ingressLoop[7].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[0].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[1].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[2].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[3].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[4].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[5].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[6].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
|bft         | egressLoop[7].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg   | 1 K x 32(NO_CHANGE)    | W |   | 1 K x 32(WRITE_FIRST)  |   | R | Port A and B     | 0      | 1      | 
+------------+--------------------------------------------------------------------------------------+------------------------+---+---+------------------------+---+---+------------------+--------+--------+

---------------------------------------------------------------------------------
Finished ROM, RAM, DSP and Shift Register Reporting
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Technology Mapping
---------------------------------------------------------------------------------
INFO: [Synth 8-7052] The timing for the instance ingressLoop[0].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance ingressLoop[1].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance ingressLoop[2].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance ingressLoop[3].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance ingressLoop[4].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance ingressLoop[5].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance ingressLoop[6].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance ingressLoop[7].ingressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance egressLoop[0].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance egressLoop[1].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance egressLoop[2].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance egressLoop[3].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance egressLoop[4].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance egressLoop[5].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance egressLoop[6].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
INFO: [Synth 8-7052] The timing for the instance egressLoop[7].egressFifo/buffer_fifo/infer_fifo.block_ram_performance.fifo_ram_reg (implemented as a Block RAM) might be sub-optimal as no optional output register could be merged into the ram block. Providing additional output register may help in improving timing.
---------------------------------------------------------------------------------
Finished Technology Mapping : Time (s): cpu = 00:00:34 ; elapsed = 00:00:36 . Memory (MB): peak = 1110.879 ; gain = 86.051
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start IO Insertion
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Flattening Before IO Insertion
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Flattening Before IO Insertion
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Final Netlist Cleanup
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Final Netlist Cleanup
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished IO Insertion : Time (s): cpu = 00:00:38 ; elapsed = 00:00:39 . Memory (MB): peak = 1117.398 ; gain = 92.570
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Renaming Generated Instances
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Renaming Generated Instances : Time (s): cpu = 00:00:38 ; elapsed = 00:00:39 . Memory (MB): peak = 1117.398 ; gain = 92.570
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Rebuilding User Hierarchy
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Rebuilding User Hierarchy : Time (s): cpu = 00:00:38 ; elapsed = 00:00:40 . Memory (MB): peak = 1117.398 ; gain = 92.570
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Renaming Generated Ports
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Renaming Generated Ports : Time (s): cpu = 00:00:38 ; elapsed = 00:00:40 . Memory (MB): peak = 1117.398 ; gain = 92.570
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Handling Custom Attributes
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Handling Custom Attributes : Time (s): cpu = 00:00:38 ; elapsed = 00:00:40 . Memory (MB): peak = 1117.398 ; gain = 92.570
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Renaming Generated Nets
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Renaming Generated Nets : Time (s): cpu = 00:00:38 ; elapsed = 00:00:40 . Memory (MB): peak = 1117.398 ; gain = 92.570
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Writing Synthesis Report
---------------------------------------------------------------------------------

Report BlackBoxes: 
+-+--------------+----------+
| |BlackBox name |Instances |
+-+--------------+----------+
+-+--------------+----------+

Report Cell Usage: 
+------+---------+------+
|      |Cell     |Count |
+------+---------+------+
|1     |BUFG     |     2|
|2     |CARRY4   |    80|
|3     |DSP48E1  |    64|
|4     |LUT1     |    49|
|5     |LUT2     |  1449|
|6     |LUT3     |    85|
|7     |LUT4     |   139|
|8     |LUT5     |    76|
|9     |LUT6     |   400|
|10    |RAMB36E1 |    16|
|11    |FDCE     |  1152|
|12    |FDPE     |   160|
|13    |FDRE     |    58|
|14    |IBUF     |    37|
|15    |OBUF     |    34|
+------+---------+------+
---------------------------------------------------------------------------------
Finished Writing Synthesis Report : Time (s): cpu = 00:00:38 ; elapsed = 00:00:40 . Memory (MB): peak = 1117.398 ; gain = 92.570
---------------------------------------------------------------------------------
Synthesis finished with 0 errors, 0 critical warnings and 0 warnings.
Synthesis Optimization Runtime : Time (s): cpu = 00:00:30 ; elapsed = 00:00:37 . Memory (MB): peak = 1117.398 ; gain = 61.727
Synthesis Optimization Complete : Time (s): cpu = 00:00:38 ; elapsed = 00:00:40 . Memory (MB): peak = 1117.398 ; gain = 92.570
INFO: [Project 1-571] Translating synthesized netlist
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.118 . Memory (MB): peak = 1129.465 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 160 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.001 . Memory (MB): peak = 1133.613 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
No Unisim elements were transformed.

INFO: [Common 17-83] Releasing license: Synthesis
67 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
synth_design completed successfully
synth_design: Time (s): cpu = 00:00:44 ; elapsed = 00:00:53 . Memory (MB): peak = 1133.613 ; gain = 108.785
INFO: [Common 17-1381] The checkpoint 'E:/INFOTECH/First Semester/Digital system design/Xilinx/project_1/project_1.runs/synth_1/bft.dcp' has been generated.
INFO: [runtcl-4] Executing : report_utilization -file bft_utilization_synth.rpt -pb bft_utilization_synth.pb
INFO: [Common 17-206] Exiting Vivado at Sat Nov  7 15:21:29 2020...
